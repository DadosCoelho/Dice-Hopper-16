# Jogo da Forca

Um jogo da forca interativo desenvolvido com HTML, CSS e JavaScript, projetado para desktops e dispositivos m√≥veis. O jogador adivinha palavras em 10 rodadas, com suporte a palavras com espa√ßos, letras acentuadas, e um sistema de pontua√ß√£o. O jogo oferece cinco n√≠veis de dificuldade, dicas autom√°ticas, e um tema claro/escuro altern√°vel.

![Captura de tela do jogo](screenshot.png) *(Adicione uma captura de tela para visualiza√ß√£o)*

## Funcionalidades
- **N√≠veis de dificuldade**: Muito F√°cil, F√°cil, M√©dio, Dif√≠cil, Muito Dif√≠cil.
- **Suporte a palavras com espa√ßo**: Espa√ßos s√£o exibidos como vazios (ex.: `m u i t o   f a c i l`) e n√£o precisam ser adivinhados.
- **Letras acentuadas e √ß**: Tratadas como equivalentes (ex.: `√°` = `a`, `√ß` = `c`).
- **Teclado virtual**: Layout QWERTY (sem `√ß`) com bot√µes clic√°veis.
- **Sistema de pontua√ß√£o**: 10 pontos por rodada, menos ~1,67 por erro, 0 com 6 erros.
- **Dicas autom√°ticas**: Cada palavra vem com uma dica.
- **Tema claro/escuro**: Altern√°vel com bot√£o üåì.
- **Responsividade**: Adapt√°vel a telas pequenas (mobile-friendly).
- **Acessibilidade**: Suporte a **Forced Colors Mode** para alto contraste.
- **10 rodadas**: Palavras n√£o se repetem no mesmo jogo, com pontua√ß√£o final exibida.

## Tecnologias
- **HTML5**: Estrutura do jogo.
- **CSS3**: Estiliza√ß√£o com Flexbox, anima√ß√µes (`pulse`), e temas claro/escuro.
- **JavaScript (ES6)**: L√≥gica do jogo, manipula√ß√£o do DOM, e `fetch` para carregar palavras.
- **JSON**: Banco de palavras em `words.json`.

## Estrutura do Projeto
```
jogo-da-forca/
‚îú‚îÄ‚îÄ index.html       # P√°gina principal com HTML, CSS e JavaScript
‚îú‚îÄ‚îÄ words.json       # Lista de palavras com dicas e n√≠veis
‚îî‚îÄ‚îÄ README.md        # Documenta√ß√£o do projeto
```

## Como Executar Localmente
1. **Pr√©-requisitos**:
   - Node.js (opcional, para servidor local).
   - Um navegador moderno (Chrome, Firefox, etc.).
   - Git instalado.

2. **Clonar o reposit√≥rio**:
   ```bash
   git clone https://github.com/SEU_USUARIO/jogo-da-forca.git
   cd jogo-da-forca
   ```

3. **Rodar localmente**:
   - Use um servidor local para evitar problemas de CORS com `fetch('words.json')`:
     ```bash
     npx http-server
     ```
     Ou use a extens√£o **Live Server** no VS Code.
   - Abra `http://localhost:8080` no navegador.

4. **Testar o jogo**:
   - Escolha um n√≠vel na tela inicial e clique em "Iniciar Jogo".
   - Adivinhe a palavra clicando nas letras do teclado virtual ou digitando (`a-z`).
   - Complete 10 rodadas para ver a pontua√ß√£o final.
   - Clique em "Voltar ao In√≠cio" para reiniciar.

## Como Publicar no Vercel
1. **Pr√©-requisitos**:
   - Conta no [Vercel](https://vercel.com).
   - Reposit√≥rio no GitHub com `index.html` e `words.json`.

2. **Configurar o reposit√≥rio**:
   - Fa√ßa push do projeto para o GitHub:
     ```bash
     git add .
     git commit -m "Initial commit"
     git push origin main
     ```

3. **Hospedar no Vercel**:
   - Fa√ßa login no [Vercel](https://vercel.com).
   - Clique em **Add New** > **Project** e importe o reposit√≥rio `jogo-da-forca`.
   - Configure:
     - **Framework Preset**: Other.
     - **Root Directory**: `.` (raiz).
     - **Output Directory**: `.` (servir `index.html` diretamente).
   - Clique em **Deploy**.
   - Acesse a URL fornecida (ex.: `https://jogo-da-forca.vercel.app`).

4. **Atualizar o site**:
   - Edite `index.html` ou `words.json`, fa√ßa commit e push:
     ```bash
     git add .
     git commit -m "Atualiza√ß√£o"
     git push origin main
     ```
   - O Vercel atualizar√° automaticamente.

## Como Adicionar Palavras
- Edite `words.json` para incluir novas palavras:
  ```json
  {
    "words": [
      { "word": "muito facil", "hint": "N√≠vel de dificuldade baixo", "level": "muito_facil" },
      { "word": "nova york", "hint": "Cidade americana famosa", "level": "facil" },
      ...
    ]
  }
  ```
- Cada palavra precisa de `word`, `hint` e `level` (um dos cinco n√≠veis).
- Fa√ßa push para atualizar no GitHub/Vercel.

## Poss√≠veis Melhorias
- Adicionar mais palavras ao `words.json` (ex.: 500 palavras, 100 por n√≠vel).
- Implementar rein√≠cio autom√°tico ap√≥s o fim do jogo.
- Melhorar acessibilidade com `aria-label` nos bot√µes.
- Adicionar valida√ß√£o para palavras inv√°lidas no `words.json`.
- Incluir sons ou anima√ß√µes adicionais para vit√≥rias/derrotas.

## Licen√ßa
[MIT License](LICENSE) *(Adicione um arquivo LICENSE se desejar)*

## Contato
- Autor: [SEU_NOME]
- GitHub: [SEU_USUARIO](https://github.com/SEU_USUARIO)
- E-mail: seu.email@example.com *(Opcional)*

---

*Desenvolvido com üíª e ‚òï*